```python
# The task involves picking up a red bottle and pouring water into a black cup.
# This can be broken down into the following stages:
# 1. Align end-effector
# 2. Grasp the red bottle
# 3. Align the red bottle with the black cup
# 4. Pour water into the black cup

num_stages = 4

### stage 1 sub-goal constraints
def stage1_subgoal_constraint1(end_effector, keypoints):
    """Ensure the end-effector is horizontally aligned for grasping the bottle."""
    vector = keypoints[0] - keypoints[1]
    cost = abs(vector[2])  # Ensure the z-component is zero for horizontal alignment
    return cost

### stage 2 sub-goal constraints
def stage2_subgoal_constraint1(end_effector, keypoints):
    """Align the end-effector with the red bottle for grasping."""
    cost = np.linalg.norm(end_effector - keypoints[0])  # Align with keypoint 0
    return cost

### stage 3 sub-goal constraints
def stage3_subgoal_constraint1(end_effector, keypoints):
    """Position the red bottle above the black cup."""
    offsetted_point = keypoints[6] + np.array([0, 0, 0.1])  # 10cm above keypoint 6
    cost = np.linalg.norm(keypoints[0] - offsetted_point)
    return cost

### stage 3 path constraints
def stage3_path_constraint1(end_effector, keypoints):
    """Ensure the robot is still grasping the red bottle."""
    return get_grasping_cost_by_keypoint_idx(0)

### stage 4 sub-goal constraints
def stage4_subgoal_constraint1(end_effector, keypoints):
    """Tilt the red bottle to pour water into the black cup."""
    vector = keypoints[0] - keypoints[1]
    cost = abs(vector[2] - 0.1)  # Ensure a tilt for pouring
    return cost

### stage 4 path constraints
def stage4_path_constraint1(end_effector, keypoints):
    """Ensure the robot is still grasping the red bottle."""
    return get_grasping_cost_by_keypoint_idx(0)

def stage4_path_constraint2(end_effector, keypoints):
    """Ensure the red bottle is directly above the black cup opening."""
    cost = np.linalg.norm(keypoints[0][:2] - keypoints[6][:2])  # Align x and y
    return cost

grasp_keypoints = [-1, 0, -1, -1]
release_keypoints = [-1, -1, -1, 0]
```