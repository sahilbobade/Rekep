```python
# The task involves picking up the red bottle and pouring water into the black cup.
# There are 4 stages involved in this task:
# 1. Align end-effector
# 2. Grasp the red bottle
# 3. Align the bottle with the cup opening
# 4. Pour water into the cup

num_stages = 4

### stage 1 sub-goal constraints
def stage1_subgoal_constraint1(end_effector, keypoints):
    """Ensure the end-effector is horizontal for grasping the bottle."""
    vector = keypoints[0] - keypoints[1]
    cost = abs(vector[2])  # Ensure the z-component is 0 for horizontal alignment
    return cost

### stage 2 sub-goal constraints
def stage2_subgoal_constraint1(end_effector, keypoints):
    """Align the end-effector with the red bottle's keypoint."""
    cost = np.linalg.norm(end_effector - keypoints[5])  # Align with keypoint 5
    return cost

### stage 3 sub-goal constraints
def stage3_subgoal_constraint1(end_effector, keypoints):
    """Position the bottle's spout above the cup opening."""
    offsetted_point = keypoints[7] + np.array([0, 0, 0.1])  # 10cm above the cup opening
    cost = np.linalg.norm(keypoints[8] - offsetted_point)  # Align keypoint 8 with offsetted point
    return cost

### stage 3 path constraints
def stage3_path_constraint1(end_effector, keypoints):
    """Ensure the robot is still grasping the red bottle."""
    return get_grasping_cost_by_keypoint_idx(5)

### stage 4 sub-goal constraints
def stage4_subgoal_constraint1(end_effector, keypoints):
    """Tilt the bottle to pour water."""
    vector = keypoints[8] - keypoints[10]
    cost = abs(vector[2] + 0.1)  # Ensure the spout is tilted downwards
    return cost

### stage 4 path constraints
def stage4_path_constraint1(end_effector, keypoints):
    """Ensure the robot is still grasping the red bottle."""
    return get_grasping_cost_by_keypoint_idx(5)

def stage4_path_constraint2(end_effector, keypoints):
    """Ensure the bottle's spout is directly above the cup opening."""
    cost = np.linalg.norm(keypoints[8][:2] - keypoints[7][:2])  # Align x, y of keypoint 8 with keypoint 7
    return cost

grasp_keypoints = [-1, 5, -1, -1]
release_keypoints = [-1, -1, -1, 5]
```