```python
# The task involves picking up a red bottle and placing it in a black holder.
# There are two stages: 
# 1. Grasp the red bottle.
# 2. Place the red bottle into the black holder.

num_stages = 2

### stage 1 sub-goal constraints
def stage1_subgoal_constraint1(end_effector, keypoints):
    """Align the end-effector with the red bottle (keypoint 9)."""
    return np.linalg.norm(end_effector - keypoints[9])

### stage 1 path constraints
# No path constraints for the grasping stage.

### stage 2 sub-goal constraints
def stage2_subgoal_constraint1(end_effector, keypoints):
    """The red bottle (keypoint 9) is inside the black holder (keypoint 3)."""
    offsetted_point = keypoints[3] + np.array([0, 0, 0.1])  # Assuming the holder is 10cm deep
    return np.linalg.norm(keypoints[9] - offsetted_point)

### stage 2 path constraints
def stage2_path_constraint1(end_effector, keypoints):
    """The robot must still be grasping the red bottle (keypoint 9)."""
    return get_grasping_cost_by_keypoint_idx(9)

grasp_keypoints = [9, -1]
release_keypoints = [-1, 9]

desired_direction = np.array([0, 1, 0])  # Forward/backward direction
```