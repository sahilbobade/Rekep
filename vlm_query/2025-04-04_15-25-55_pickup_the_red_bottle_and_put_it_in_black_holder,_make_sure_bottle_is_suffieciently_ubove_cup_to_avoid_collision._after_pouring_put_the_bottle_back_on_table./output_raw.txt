```python
# The task involves picking up a red bottle, placing it in a black holder, ensuring it is above the cup to avoid collision, pouring, and then placing the bottle back on the table.
# There are 5 stages: 
# 1. Grasp the red bottle.
# 2. Move the bottle above the black holder.
# 3. Pour the bottle.
# 4. Move the bottle back above the table.
# 5. Place the bottle back on the table.

num_stages = 5

### stage 1 sub-goal constraints
def stage1_subgoal_constraint1(end_effector, keypoints):
    """Align the end-effector with the red bottle (keypoint 8)."""
    return np.linalg.norm(end_effector - keypoints[8])

### stage 2 sub-goal constraints
def stage2_subgoal_constraint1(end_effector, keypoints):
    """The bottle (keypoint 8) needs to be 10cm above the black holder (keypoint 9)."""
    offsetted_point = keypoints[9] + np.array([0, 0, 0.1])
    return np.linalg.norm(keypoints[8] - offsetted_point)

### stage 2 path constraints
def stage2_path_constraint1(end_effector, keypoints):
    """The robot must still be grasping the red bottle (keypoint 8)."""
    return get_grasping_cost_by_keypoint_idx(8)

### stage 3 sub-goal constraints
def stage3_subgoal_constraint1(end_effector, keypoints):
    """The bottle (keypoint 8) must be tilted to pour."""
    return np.abs(keypoints[8][2] - keypoints[10][2] - 0.05)

### stage 3 path constraints
def stage3_path_constraint1(end_effector, keypoints):
    """The robot must still be grasping the red bottle (keypoint 8)."""
    return get_grasping_cost_by_keypoint_idx(8)

### stage 4 sub-goal constraints
def stage4_subgoal_constraint1(end_effector, keypoints):
    """The bottle (keypoint 8) needs to be 10cm above the table (keypoint 0)."""
    offsetted_point = keypoints[0] + np.array([0, 0, 0.1])
    return np.linalg.norm(keypoints[8] - offsetted_point)

### stage 4 path constraints
def stage4_path_constraint1(end_effector, keypoints):
    """The robot must still be grasping the red bottle (keypoint 8)."""
    return get_grasping_cost_by_keypoint_idx(8)

### stage 5 sub-goal constraints
def stage5_subgoal_constraint1(end_effector, keypoints):
    """Align the bottle (keypoint 8) with the table (keypoint 0)."""
    return np.linalg.norm(keypoints[8] - keypoints[0])

### stage 5 path constraints
def stage5_path_constraint1(end_effector, keypoints):
    """The robot must still be grasping the red bottle (keypoint 8)."""
    return get_grasping_cost_by_keypoint_idx(8)

grasp_keypoints = [8, -1, -1, -1, -1]
release_keypoints = [-1, -1, -1, -1, 8]

desired_direction = np.array([0, 1, 0])
```